SELECT * FROM user;
SELECT * FROM friendship;

INSERT INTO user ( firts_name,last_name, created_at,updated_at)
VALUES
("Amy","Giver",now(),now()),
("Elie","Byers",now(),now()),
("Marky ","Mark",now(),now()),
("Big","Bird",now(),now()),
("Kermit","The Frog",now(),now());

INSERT INTO friendship ( user_id,frien_id,created_at,updated_at)
VALUES
(1,2,now(),now()),
(1,4,now(),now()),
(1,5,now(),now()),
(2,5,now(),now()),
(2,3,now(),now()),
(3,4,now(),now());

SELECT user.firts_name,user.last_name, user2.firts_name AS friend_first_name,user2.last_name AS friend_last_name FROM user 
JOIN friendship ON user.id = friendship.user_id
LEFT JOIN user as user2 ON user2.id = friendship.frien_id;

SELECT user.firts_name,user.last_name, user2.firts_name AS friend_first_name,user2.last_name AS friend_last_name FROM user 
JOIN friendship ON user.id = friendship.user_id
LEFT JOIN user as user2 ON user2.id = friendship.frien_id
WHERE user.id = 1;

SELECT count(*) AS total_friendship
  FROM  friendship;
  
SELECT user_id , count(*) AS max_friendship
	FROM friendship GROUP BY user_id ORDER BY max_friendship DESC LIMIT 1;
    
    SELECT user.firts_name,user.last_name, user2.firts_name AS friend_first_name,user2.last_name AS friend_last_name FROM user 
JOIN friendship ON user.id = friendship.user_id
LEFT JOIN user as user2 ON user2.id = friendship.frien_id
WHERE user.id = 1 ORDER BY user2.firts_name ASC;


-- Return the user_id that has max friendships-- 
-- select second_table.user_id
-- from (SELECT user_id , count(*) AS max_friendship
-- 	FROM friendship GROUP BY user_id ORDER BY max_friendship DESC LIMIT 1) second_table;

-- Return the name and friendships name for the user that has the most friendships-- 
-- SELECT user.firts_name,user.last_name, user2.firts_name AS friend_first_name,user2.last_name AS friend_last_name FROM user 
-- JOIN friendship ON user.id = friendship.user_id
-- LEFT JOIN user as user2 ON user2.id = friendship.frien_id
-- WHERE user.id = (select second_table.user_id
-- from (SELECT user_id , count(*) AS max_friendship
-- 	FROM friendship GROUP BY user_id ORDER BY max_friendship DESC LIMIT 1) second_table)